<?php

namespace app\index\controller;
use app\admin\model\Pay as PayMoney;
use app\admin\model\users\Bank;
use app\common\controller\Frontend;
use app\common\model\Users as UsersModel;
use think\Config;
use think\Db;
use think\Exception;
use think\exception\PDOException;
use think\exception\ValidateException;

class Pay extends Frontend
{

    protected $noNeedLogin = '*';
    protected $noNeedRight = '*';
    protected $layout = '';

    protected $pay_memberid = '';//商户ID  200899694
    protected $Md5key = '';//密钥   f67lr0en4lw54p8kkpoejmircj8sjawm
    protected $bankcode = '';//支付方式   "961";

    function _initialize()
    {
        $site = Config::get('site');
        $this->pay_memberid=$site['pay_memberid'];
        $this->Md5key=$site['key'];
        $this->bankcode=$site['bankcode'];
//        dump()
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    //计算签名
    function createSign($Md5key, $list)
    {
        ksort($list);
        $md5str = "";
        foreach ($list as $key => $val) {
            if (!empty($val)) {
                $md5str = $md5str . $key . "=" . $val . "&";
            }
        }
        $sign = strtoupper(md5($md5str . "key=" . $Md5key));
        return $sign;
    }

    //CURL代码
    public function curlS($url, $return_array)
    {
        $postData = "";
        foreach ($return_array as $key => $val) {
            $postData = $postData . $key . "=" . $val . "&";
        }
        $postData = rtrim($postData, '&');
        $ch        = curl_init();
        curl_setopt($ch, CURLOPT_TIMEOUT, 10);
        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
        curl_setopt($ch, CURLOPT_HTTPHEADER,["Content-type: application/x-www-form-urlencoded"]);
        $contents = curl_exec($ch);
        curl_close($ch);
        return $contents;
    }
    /*
     * 支付提交页面生成代码
     */
    public function setHtml($tjurl, $arraystr){
        $str = '<form id="Form1" name="Form1" method="post" action="' . $tjurl . '">';
        foreach ($arraystr as $key => $val) {
            $str .= '<input type="hidden" name="' . $key . '" value="' . $val . '">';
        }
        $str .= '<input type="hidden" name="__hash__" value="539434b08d5a1efeeb9e9dd96ff846ff_2057b2510805cc3988c854a6fdc6d833" /></form>';
        $str .= '<script>';
        $str .= 'document.Form1.submit();';
        $str .= '</script>';
        exit($str);
    }

    //支付页面
    function index(){
        error_reporting(0);
        header("Content-type: text/html; charset=utf-8");
        $pay_memberid = $this->pay_memberid;   //商户ID
        $Md5key = $this->Md5key;   //密钥
        $payid=$this->request->request('id');

        $paydata=PayMoney::get($payid);
        if (!$paydata){
            $this->error('The order is not generated',url('index/Index'));//订单没有生成
        }


        $pay_orderid = $paydata->out_trade_no;    //订单号
        $pay_amount =  $paydata->pay_amount;    //交易金额
        $pay_bankcode =  $this->bankcode;   //需对接最新通道编码
//961   PayTmWeb
//962	PayTmH5

        if(empty($pay_memberid)||empty($pay_amount)||empty($pay_bankcode)){
            $this->error('incomplete information',url('index/Index'));//信息不完整！
        }
        $pay_applydate = date("Y-m-d H:i:s",$paydata->pay_applydate);  //订单时间
        $pay_notifyurl = "http://{$_SERVER['SERVER_NAME']}/index/pay/server";   //服务端返回地址
        $pay_callbackurl = "http://{$_SERVER['SERVER_NAME']}/index/pay/page";  //页面跳转返回地址

        $native = array(
            "pay_memberid" => $pay_memberid,
            "out_trade_no" => $pay_orderid,
            "pay_amount" => $pay_amount,
            "pay_applydate" => $pay_applydate,
            "pay_type" => $pay_bankcode,
            "pay_notifyurl" => $pay_notifyurl,
            "pay_callbackurl" => $pay_callbackurl,

        );

        $tjurl = "https://game6.cheapgood.in/Pay_Index.html";   //提交地址
        ksort($native);
        $md5str = "";
        foreach ($native as $key => $val) {
            $md5str = $md5str . $key . "=" . $val . "&";
        }

        $sign = $this->createSign($Md5key,$native);


        $bankdata=Bank::get(['users_id'=>$paydata->users_id]);//会员银行卡相关信息
        if (!$bankdata){
            $this->error('Users lack bank card details',url('index/Index'));//用户缺少银行卡详细信息
        }
        $native["customerName"]=$bankdata->Actual_name;//付款人名字;
        $native["customerPhone"]=$bankdata->Mobile_number;//付款人电话;
        $native["customerEmail"]=$bankdata->Actual_name;//付款人邮箱
        $native["sign"] = $sign;
        $native['pay_attach'] = "备用字段";
        $native['pay_productname'] =$paydata->pay_productname;

        $this->view->assign("tjurl", $tjurl);
        $this->view->assign("native", $native);
        return $this->view->fetch();
    }

    /*
     * 完成支付页面
     */
    function page(){
        //网页同步回调跳转示例
        header('Content-type:text/html;charset=utf-8');
        $data=$_REQUEST;
        $ReturnArray = array( // 返回字段
            "pay_memberid" => $data["pay_memberid"], // 商户ID
            "pay_orderid" =>  $data["pay_orderid"], // 支付订单号
            "out_trade_no" =>  $data["out_trade_no"], // 商户订单号
            "pay_amount" =>  $data["pay_amount"], // 订单金额，单位为卢比
            "datetime" =>  $data["datetime"], // 通知时间
            "returncode" => $data["returncode"],//业务结果
            "trade_state" =>  $data["trade_state"], // NOTIFYED—通知成功,SUCCESS—支付成功,NOTPAY—未支付

        );

        $Md5key = $this->Md5key;
        $sign = $this->createSign($Md5key,$ReturnArray);

        if ($sign == $data["sign"]) {
            if ($data["returncode"] == "SUCCESS") {
                $str = "交易成功！订单号：{$data["pay_orderid"]} . 商户订单号:{$data['out_trade_no']}";
                file_put_contents("success.txt",$str."\n", FILE_APPEND);
//                exit("OK");
                $this->success('success',url('index/Index'));
            }
        }
        $this->error('error',url('index/Index'));
    }

    /*
     * 异步
     */
    function server(){
        //服务器异步回调示例
        header('Content-type:text/html;charset=utf-8');
        $content = file_get_contents('php://input');
//        file_put_contents("pay.txt",$content."\n", FILE_APPEND);
        $data    =json_decode($content, true);
        $ReturnArray = array( // 返回字段
            "pay_memberid" => $data["pay_memberid"], // 商户ID
            "pay_orderid" =>  $data["pay_orderid"], // 支付订单号
            "out_trade_no" =>  $data["out_trade_no"], // 商户订单号
            "pay_amount" =>  $data["pay_amount"], // 订单金额，单位为卢比
            "datetime" =>  $data["datetime"], // 通知时间
            "returncode" => $data["returncode"],//业务结果
            "trade_state" =>  $data["trade_state"], // NOTIFYED=通知成功,SUCCESS=支付成功,NOTPAY=未支付

        );
        $Md5key = $this->Md5key;
        $sign = $this->createSign($Md5key,$ReturnArray);
//        file_put_contents("pay.txt",'sing:'.$sign."\n", FILE_APPEND);
        if ($sign == $data["sign"]) {
            if ($data["returncode"] == "SUCCESS") {
                //业务逻辑开始
                $paydata=PayMoney::get(["out_trade_no"=>$data['out_trade_no']]);
                if ($paydata){
                    if ($paydata->trade_state=='NOTPAY'){//未支付
                        Db::startTrans();
                        try {

                            //1.更改订单状态
                            $up=[
                                'datetime'=>time(),
                                'trade_state'=>$data["trade_state"],
                            ];
                            $paydata->save($up);
                            //2.修改用户余额并添加记录
                            UsersModel::money($paydata->pay_amount,$paydata->users_id,"用户充值:{$paydata->pay_amount}。三方订单id:{$paydata->id}");
                            Db::commit();
                            //业务逻辑结束
                            $str = "交易成功！订单号：{$data["pay_orderid"]} . 商户订单号:{$data['out_trade_no']}";
                            file_put_contents("pay.txt",$str."\n", FILE_APPEND);
                            exit("OK");
                        } catch (ValidateException $e) {
                            Db::rollback();
                            $this->error($e->getMessage());
                        } catch (PDOException  $e) {
                            Db::rollback();
                            $this->error($e->getMessage());
                        } catch (Exception  $e) {
                            Db::rollback();
                            $this->error($e->getMessage());
                        }
                    }


                }



            }
        }
    }

}
