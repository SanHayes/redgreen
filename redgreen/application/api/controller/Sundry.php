<?php

namespace app\api\controller;
use app\admin\model\Notice;
use app\admin\model\Suggest;
use app\admin\model\Task;
use app\common\controller\Api;

/**
 * 杂项（任务、举报和建议、任务）
 */
class Sundry extends Api
{
    protected $noNeedLogin = ['money_apply','money_log'];
    protected $noNeedRight = '*';
    public function _initialize()
    {
//        parent::_initialize(); // TODO: Change the autogenerated stub
    }
    /**
     * 我的任务列表
     *
     * @param string $token 密钥
     * @param string $limit  数量（默认20）
     * @param string $page  页数（默认1）
     * @ApiReturn   ({
            'code':'1',
            'msg':'返回成功'
            'data':'[{
                    "id": 2,
                    "users_id": 12,
                    "title": "装逼 ", //任务名
                    "data": "装天下之大笔", //任务详情
                    "score": 500,  //任务积分
                    "status": "1", //2=未完成,3=已完成
                    "createtime": 1600448564,
                    "updatetime": 1600448577,
                    "status_text": "Status 1"
                    }]'
        })
     */
    public function task_list(){
        $userid=$this->token();//token验证
        $limit = $this->request->request('limit');

        if (!$limit && $limit==''){
            $limit=20;
        }
        $page = $this->request->request('page');
        if (!$page && $page==''){
            $page=1;
        }
        $data['list']=Task::where(['users_id'=>$userid])->order('createtime','desc')
            ->page($page,$limit)->select();
//        foreach($data['list'] as $k=>$v){
//            $data['list'][$k]['']=>$v
//        }
        $data['count']=Task::where(['users_id'=>$userid])->count();

        $this->success('success',$data);
    }

    /**
     * 任务详情
     *  @param string $token 密钥
     * @param string $id 任务id
     */
    public function task_info()
    {
        $userid=$this->token();//token验证
        $id= $this->request->request('id');
        $task=Task::get($id);
        if (!$task){
            $this->error(__("任务id不存在"));
        }
        if ($task->users_id!=$userid){
            $this->error(__("非法操作"));
        }
        $data=$task->toArray();
        $data['createtime']=date('Y-m-d H:i:s',$data['createtime']);
        $data['updatetime']=date('Y-m-d H:i:s',$data['updatetime']);

        $this->success(__("task（{$task->id}）"),$data);
    }

    /**
     *  申请完成任务
     *  @param string $token 密钥
     *  @param string $id 任务id
     */
    function task_ok(){
        $userid=$this->token();//token验证
        $id=$this->request->request('id');
        //任务id是否正确
        $task=Task::get($id);
        if (!$task || $task->users_id!=$userid){
            $this->error(__('任务id有误'));
        }
        if ($task->status==2){
            $this->error('in the application');//申请中
        }
        if ($task->save(['status'=>2])){
            $this->success('success');
        }else{
            $this->error('error');
        }

    }

    /**
     * 投诉和建议列表
     *
     * @param string $token 密钥

     * @param string $status  状态:1=已回复,0=未回复（默认1）
     * @param string $limit  数量（默认20）
     * @param string $page  页数（默认1）
     *  @ApiReturn   ({
    'code':'1',
    'msg':'返回成功'
    'data':'[
    {
    "id": 3,
    "users_id": 12,
    "type": "2",1=建议,2=请教,3=充值问题,4=提款问题,5=奇偶问题,6=红色信封问题,7=其他
    "OutId": "可惜不是你",//标题
    "data": "",//详情
    "status": "1",//1=已回复,0=未回复,2全部
    "answer": "陪我到最后",//回答
    "createtime": 1600452638,
    "updatetime": 1600452808,
    "type_text": "Type 2",
    "status_text": "Status 1"
    }
    ]'
    })
     *
     */
    function suggest_list(){
        $userid=$this->token();//token验证
        $limit = $this->request->request('limit');
        if (!$limit && $limit==''){
            $limit=20;
        }
        $page = $this->request->request('page');
        if (!$page && $page==''){
            $page=1;
        }
        $status=$this->request->request('status');
        $where=['users_id'=>$userid];
        if ($status=='2'){
           $a="查全部";
        }else{
            $where['status']=$status;
        }


        $data['list']=Suggest::where($where)->order('createtime','desc')
            ->page($page,$limit)->select();
        $data['count']=Suggest::where($where)->count();
        if ($data['list']){
            $this->success('success',$data);
        }else{
            $this->error('error');
        }
    }
    /**
     * 投诉和建议详情
     *  @param string $token 密钥
     * @param string $id 投诉和建议id
     */
    public function suggest_info()
    {
        $userid=$this->token();//token验证
        $id= $this->request->request('id');
        $task=Suggest::get($id);
        if (!$task){
            $this->error(__("id error"));
        }
        if ($task->users_id!=$userid){
            $this->error(__(" illegal operation"));//非法操作
        }
        $data=$task->toArray();
        $data['createtime']=date('Y-m-d H:i:s',$data['createtime']);
        $data['updatetime']=date('Y-m-d H:i:s',$data['updatetime']);

        $this->success(__("Id（{$task->id}）"),$data);
    }
    /**
     *  投诉和建议发起
     * @param string $token 密钥
     * @param string $type 类别:1=建议,2=请教,3=充值问题,4=提款问题,5=奇偶问题,6=红色信封问题,7=其他
     * @param string $OutId 问题
     * @param string $data 问题详情
     */
      function suggest_add(){
          $userid=$this->token();//token验证
          $type = $this->request->request('type');
          $OutId = $this->request->request('OutId');
          $data = $this->request->request('data');

          //类别是否符合
          $Suggest=new Suggest();
          if (!isset($Suggest->getTypeList()[$type])){
              $this->error(__('type error'));
          }
         if (!$OutId||$OutId==''){
             $this->error(__('Please fill in the complaint or suggestion'));//请填写投诉或建议内容
         }
          $adddata=[
              'users_id'=>$userid,
              'type'=>$type,
              'OutId'=>$OutId,
              'data'=>$data,
              'status'=>0,
          ];
          if(Suggest::create($adddata)){
              $this->success('success');
          }else{
              $this->error('error');
          }

      }


    /**
     * 通知列表
     * @param string $token 密钥
     * @param string $limit  数量（默认20）
     * @param string $page  页数（默认1）
     *
     * @ApiReturn   ({
    "code": 1,
    "msg": "通知列表",
    "time": "1600453742",
    "data": [
    {
    "id": 2,
    "users_id": 12,
    "title": "狼人来了", //通知
    "data": "天黑请闭眼",//详情
    "createtime": 1600453576,
    "updatetime": 1600453576
    }
    ]
    })
     */
    function notice_list(){
        $userid=$this->token();//token验证
        $limit = $this->request->request('limit');
        if (!$limit && $limit==''){
            $limit=20;
        }
        $page = $this->request->request('page');
        if (!$page && $page==''){
            $page=1;
        }

        $data['list']=Notice::where(['users_id'=>$userid])->order('createtime','desc')
            ->page($page,$limit)->select();
        $data['count']=Notice::where(['users_id'=>$userid])->count();
        $this->success('success',$data);
    }

    /**
     * 通知详情
     *  @param string $token 密钥
     * @param string $id 通知id
     */
    public function notice_info()
    {
        $userid=$this->token();//token验证
        $id= $this->request->request('id');
        $task=Notice::get($id);
        if (!$task){
            $this->error(__("id error"));
        }
        if ($task->users_id!=$userid){
            $this->error("illegal operation");//非法操作
        }
        $data=$task->toArray();
        $data['createtime']=date('Y-m-d H:i:s',$data['createtime']);
        $data['updatetime']=date('Y-m-d H:i:s',$data['updatetime']);

        $this->success(__("Id（{$task->id}）"),$data);
    }

}
